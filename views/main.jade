extends layout

block head

	if enable_2D
		include ./includes/css_2d.jade
	if enable_3D
		include ./includes/css_3d.jade

block content
	.container-fluid
		// Default JavaScript libraries
		script(src='/socket.io/socket.io.js')
		
		include ./includes/js_libraries_2d.jade
		
		include ./includes/js_libraries_3d.jade
		
		script.
			var C3D = JSON.parse('!{C3D_server}');
		
		// C3D Library
		script(src='/libs/c3d_client.js')
		
		.page-header
			h1= title
		.row
			if (enable_2D && enable_3D)	
				.col-md-6
					h3 2D
					#container2D 
				.col-md-6
					h3 3D
					#container3D
						#pointer
						#plerror
			else if (enable_2D && !enable_3D)	
				.col-md-8.col-md-offset-2
					h3 2D
					#container2D 	
			else if (!enable_2D && enable_3D)
				.col-md-8.col-md-offset-2
					h3 3D
					#container3D
						#pointer
						#plerror

		if enable_2D
			script.
				C3D.init2D();
				C3D.generate2DModel();
				
		if enable_3D 
			script.
				C3D.init3D();
				C3D.generate3DModel();
		
		.page-header
			h1 Controls
		

		.row
			.col-md-6
				h3 Building Controls
			.col-md-6
				h3 Feature info
		.row
			.col-md-3
				.lead Select Level: 
					select#selectLevel
			.col-md-3
				.lead Select Room:
					select#selectRoom(disabled = true)
			.col-md-6#info
		
		if enable_3D
			h3 3D Controls			
			.row
				.col-md-3
					button.btn.btn-default.btn-lg(id="startFPV") Start FPV
					
		script.
			var elements = ['level','building'];
			for(id in C3D.index)
				if(elements.indexOf(C3D.index[id].properties.class) > -1)
					$("#selectLevel").append('<option value=' + id + '>' + id +'</option>');
			
			$("#selectLevel").val(C3D.config.startPosition.levelId);
	
			C3D.emit('selectFeature', C3D.actualPosition.levelId);
	
			$( "#selectLevel" ).on('change', function() {
				C3D.emit('selectFeature',this.value);
				
				// in aggiunta viene popolato il secondo men√π con le room
				$("#selectRoom").prop('disabled', false);
				$('#selectRoom option').each( function () { $(this).remove(); } );
				for(id in C3D.index)
					if( (C3D.index[id].properties.parent === this.value) && (C3D.index[id].properties.class === 'room') )
						$("#selectRoom").append('<option value=' + id + '>' + id +'</option>');
			});
	
			$( "#selectRoom" ).on('change', function() {
				C3D.emit('selectFeature', this.value);
			});

			$( "#startFPV" ).on('click', function() {
				C3D.emit('startFPV');
			});

			C3D.on('showFeatureInfo', function(idObject){
				showFeatureInfo = {};

				showFeatureInfo['badgeReader'] = function(s) {
					if(!(jQuery.isEmptyObject(mapUsersConnected))) {
						s = s.concat('<p class="lead">Users connected</p>');
						s = s.concat('<table class="table table-hover">');
							s = s.concat('<tr>');
								s = s.concat('<th>ID</th>');
								s = s.concat('<th>level</th>');
							s = s.concat('</tr>');
						console.log(mapUsersConnected);

						for(var i in mapUsersConnected) {
							s = s.concat('<tr>');
								s = s.concat('<th>' + mapUsersConnected[i].id + '</th>');
								s = s.concat('<th>' + mapUsersConnected[i].position.levelId +'</th>');
							s = s.concat('</tr>');						
							}
						s = s.concat('</table>');
					}
					else {
						s = s.concat('<p>No user is connected.</p>');
					}
					return s;
				}

				$('#info').empty();
				var feature = C3D.index[idObject];
				if($.inArray(feature.properties.class, C3D.interactiveFeatures) !== -1) {
					var s = '<dl class="dl-horizontal">';
					s = s.concat('<dt>id</dt><dd>' + feature.id +'</dd>');
					s = s.concat('<dt>class</dt><dd>'+ feature.properties.class +'</dd>');
					s = s.concat('<dt>Position</dt><dd>[' + feature.obj3D.position.x + '; ' +  feature.obj3D.position.y + ']</dd>');
					if(feature.properties.url !== undefined)
						s = s.concat('<dt>url</dt><dd>'+ feature.properties.url +'</dd>');					
					s = s.concat('</dl>');
					if(feature.properties.class in showFeatureInfo)
						s = showFeatureInfo[feature.properties.class](s);
					$('#info').append(s);
				}




			});	

			C3D.on('selectFeature', function(idObject) {
					C3D.emit('showFeatureInfo',idObject);
			});				  

		block internal_content